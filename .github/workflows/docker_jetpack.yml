name: Build and Publish JetPack Dockerfile

on:
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: read
  packages: write
  id-token: write

concurrency:
  group: "docker-jetpack"
  cancel-in-progress: false

jobs:
  get-commit-message:
    name: "Get commit message"
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'workflow_dispatch' }}

    env:
      LAST_MSG: ""

    steps:
      - name: Get commits
        env:
          COMMITS_URL: ${{ github.event.pull_request.commits_url }}
        run: |
          if [ "${COMMITS_URL}x" != "x" ]; then
            # get commits list and pick up last one by jq
            # caution: only 100 commits will be taken by curl
            # if your PR has more than 100 commits
            # you have to set page query parameter
            # and request last page commits
            # API URL details: https://docs.github.com/en/rest/pulls/pulls?apiVersion=2022-11-28#list-commits-on-a-pull-request
            LAST_MSG=$(curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "${COMMITS_URL}?per_page=100" | jq -r .[-1].commit.message)
            # set environment variable
            echo "LAST_MSG=${LAST_MSG}" >> "${GITHUB_ENV}"
          else
            echo 'LAST_MSG=' >> "${GITHUB_ENV}"
          fi
    outputs:
      commit-message: ${{ env.LAST_MSG }}

  print-message:
    name: "Print Last Commit Message"
    needs: get-commit-message
    runs-on: ubuntu-latest
    steps:
      - name: Print Commit Message
        run: |
          echo "Commit Message: ${{ needs.get-commit-message.outputs.commit-message }}"
          echo "Build: ${{ needs.get-commit-message.outputs.commit-message == '** Build and Publish JetPack Image **' }}"

  package-docker-image-pr-commit:
    name: Build Docker image and push to repository (called from PR with Commit Message)
    needs: [get-commit-message, print-message]
    runs-on: ubuntu-latest
    if: ${{ needs.get-commit-message.outputs.commit-message == '** Build and Publish JetPack Image **' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: "arm64"

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Get repository owner and convert to lowercase string
        id: repo-owner-string
        uses: ASzc/change-string-case-action@v5
        with:
          string: ${{ github.repository_owner }}

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

      - name: Login to Github Packages
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build JetPack Image and push to GitHub Container Registry
        uses: docker/build-push-action@v2
        with:
          context: .devcontainer
          file: .devcontainer/Dockerfile_JetPack
          tags: "ghcr.io/${{ steps.repo-owner-string.outputs.lowercase }}/autonomy-jetpack:${{ steps.date.outputs.date }}"
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          push: true

      # This bit is necessary if you don't want your cache to grow forever
      # until it hits GitHub's limit of 5GB.
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  package-docker-image-manual:
    name: Build Docker image and push to repository (called from button on actions page)
    runs-on: ubuntu-latest
    if: ${{(github.event_name == 'workflow_dispatch') }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: "arm64"

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Get repository owner and convert to lowercase string
        id: repo-owner-string
        uses: ASzc/change-string-case-action@v5
        with:
          string: ${{ github.repository_owner }}

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

      - name: Login to Github Packages
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build JetPack Image and push to GitHub Container Registry
        uses: docker/build-push-action@v2
        with:
          context: .devcontainer
          file: .devcontainer/Dockerfile_JetPack
          tags: "ghcr.io/${{ steps.repo-owner-string.outputs.lowercase }}/autonomy-jetpack:${{ steps.date.outputs.date }}"
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          push: true

      # This bit is necessary if you don't want your cache to grow forever
      # until it hits GitHub's limit of 5GB.
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
